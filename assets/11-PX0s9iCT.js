import{_ as e,r as i,c as p,o as d,i as n,b as o,k as t}from"./index-CQCvOr_e.js";const r={},a={class:"ts-grid is-stacked is-compact"},x={class:"column"},m={class:"upper-alpha-list"};function b(u,l){const s=i("vl");return d(),p("div",a,[n("div",x,[l[0]||(l[0]=o(" (10%) Let ")),t(s,{exp:"T"}),l[1]||(l[1]=o(" be a self-adjoint operator on a finite-dimensional inner product space ")),t(s,{exp:"V"}),l[2]||(l[2]=o(" with distinct eigenvalues ")),t(s,{exp:"\\lambda_1, \\lambda_2, \\,\\cdots , \\lambda_k"}),l[3]||(l[3]=o(". Let ")),t(s,{exp:"E_i"}),l[4]||(l[4]=o(" be the eigenspace of ")),t(s,{exp:"T"}),l[5]||(l[5]=o(" corresponding to ")),t(s,{exp:"\\lambda_i"}),l[6]||(l[6]=o(", and let ")),t(s,{exp:"T_i"}),l[7]||(l[7]=o(" be the orthogonal projection of ")),t(s,{exp:"V"}),l[8]||(l[8]=o(" on ")),t(s,{exp:"E_i"}),l[9]||(l[9]=o(", ")),t(s,{exp:"1 \\leq i \\leq k"}),l[10]||(l[10]=o(". "))]),n("ul",m,[n("li",null,[t(s,{exp:"\\sum_{i=1}^{k} \\lambda_i T_i = T"})]),n("li",null,[t(s,{exp:"V = E_1 \\oplus E_2 \\oplus \\cdots \\oplus E_k"})]),n("li",null,[l[11]||(l[11]=o(" Given any polynomial ")),t(s,{exp:"g"}),l[12]||(l[12]=o(", ")),t(s,{exp:"g(T) = g(\\lambda_1) T_1 + g(\\lambda_2) T_2 + \\cdots + g(\\lambda_k) T_k"}),l[13]||(l[13]=o(". "))]),n("li",null,[t(s,{exp:"\\lambda_1, \\lambda_2, \\,\\cdots , \\lambda_k"}),l[14]||(l[14]=o(" are all real numbers. "))]),n("li",null,[l[15]||(l[15]=o(" If ")),t(s,{exp:"T(x) = Ax"}),l[16]||(l[16]=o(", where ")),t(s,{exp:"x \\in \\mathbb{C}^n"}),l[17]||(l[17]=o(", then ")),t(s,{exp:"A"}),l[18]||(l[18]=o(" is diagonalizable. "))])])])}const g=e(r,[["render",b]]);export{g as default};
